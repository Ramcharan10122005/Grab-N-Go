<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Settings - Grab 'n' Go</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/" class="flex-shrink-0 flex items-center">
                        <span class="text-2xl font-bold text-orange-500">Grab 'n' Go</span>
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Home</a>
                    <a href="/menu" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Menu</a>
                    <a href="/about" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">About</a>
                    <a href="/contact" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Contact</a>
                    <a href="/orders" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Orders</a>
                    <!-- Profile Button -->
                    <button id="profileButton" class="flex items-center justify-center w-10 h-10 rounded-full bg-orange-500 text-white hover:bg-orange-600 focus:outline-none transition-colors duration-200">
                        <span class="text-lg font-medium"><%= user.username.charAt(0).toUpperCase() %></span>
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <!-- Settings Content -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <h1 class="text-2xl font-bold text-gray-900 mb-6">Account Settings</h1>
            
            <div class="bg-white shadow rounded-lg divide-y divide-gray-200">
                <!-- Profile Section -->
                <div class="p-6">
                    <h2 class="text-lg font-medium text-gray-900 mb-4">Profile Information</h2>
                    <form action="/settings/profile" method="POST" class="space-y-4" id="profileForm">
                        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                            <div>
                                <label for="name" class="block text-sm font-medium text-gray-700">Name <span class="text-red-500">*</span></label>
                                <input type="text" name="name" id="name" required value="<%= user.name || '' %>" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700">Email <span class="text-red-500">*</span></label>
                                <input type="email" name="email" id="email" required value="<%= user.email || '' %>" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                            <div>
                                <label for="username" class="block text-sm font-medium text-gray-700">Username <span class="text-red-500">*</span></label>
                                <input type="text" name="username" id="username" required value="<%= user.username || '' %>" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                            <div>
                                <label for="phone" class="block text-sm font-medium text-gray-700">Phone Number</label>
                                <input type="tel" name="phone" id="phone" value="<%= user.phone || '' %>" pattern="[0-9]{10}" title="Please enter a valid 10-digit phone number" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                        </div>
                        <div class="mt-4">
                            <h3 class="text-md font-medium text-gray-900 mb-2">Address Information</h3>
                            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                                <div>
                                    <label for="street" class="block text-sm font-medium text-gray-700">Street Address</label>
                                    <input type="text" name="address[street]" id="street" value="<%= user.address?.street || '' %>" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                                </div>
                                <div>
                                    <label for="city" class="block text-sm font-medium text-gray-700">City</label>
                                    <input type="text" name="address[city]" id="city" value="<%= user.address?.city || '' %>" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                                </div>
                                <div>
                                    <label for="state" class="block text-sm font-medium text-gray-700">State</label>
                                    <select name="address[state]" id="state" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                                        <option value="">Select State</option>
                                        <% const states = ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]; %>
                                        <% states.forEach(state => { %>
                                            <option value="<%= state %>" <%= user.address?.state === state ? 'selected' : '' %>><%= state %></option>
                                        <% }); %>
                                    </select>
                                </div>
                                <div>
                                    <label for="zipCode" class="block text-sm font-medium text-gray-700">ZIP Code</label>
                                    <input type="text" name="address[zipCode]" id="zipCode" value="<%= user.address?.zipCode || '' %>" pattern="[0-9]{5}" title="Please enter a valid 5-digit ZIP code" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                                </div>
                            </div>
                        </div>
                        <div class="flex justify-end">
                            <button type="submit" class="px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors duration-200">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Password Section -->
                <div class="p-6">
                    <h2 class="text-lg font-medium text-gray-900 mb-4">Update Password</h2>
                    <form action="/settings/password" method="POST" class="space-y-4">
                        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                            <div>
                                <label for="currentPassword" class="block text-sm font-medium text-gray-700">Current Password</label>
                                <input type="password" name="currentPassword" id="currentPassword" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                            <div></div>
                            <div>
                                <label for="newPassword" class="block text-sm font-medium text-gray-700">New Password</label>
                                <input type="password" name="newPassword" id="newPassword" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                            <div>
                                <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
                                <input type="password" name="confirmPassword" id="confirmPassword" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500">
                            </div>
                        </div>
                        <div class="flex justify-end">
                            <button type="submit" class="px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors duration-200">
                                Update Password
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Account Preferences -->
                <div class="p-6">
                    <h2 class="text-lg font-medium text-gray-900 mb-4">Account Preferences</h2>
                    <form action="/settings/preferences" method="POST" class="space-y-4">
                        <div>
                            <div class="flex items-center">
                                <input type="checkbox" name="emailNotifications" id="emailNotifications" class="h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded">
                                <label for="emailNotifications" class="ml-2 block text-sm text-gray-700">
                                    Email notifications for order updates
                                </label>
                            </div>
                            <div class="flex items-center mt-2">
                                <input type="checkbox" name="smsNotifications" id="smsNotifications" class="h-4 w-4 text-orange-500 focus:ring-orange-500 border-gray-300 rounded">
                                <label for="smsNotifications" class="ml-2 block text-sm text-gray-700">
                                    SMS notifications for order updates
                                </label>
                            </div>
                        </div>
                        <div class="flex justify-end">
                            <button type="submit" class="px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors duration-200">
                                Save Preferences
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile Modal -->
    <div id="profileModal" class="modal-backdrop fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="modal-content bg-white rounded-lg shadow-xl w-96 relative">
            <!-- Close button -->
            <button id="closeModal" class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 focus:outline-none">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>

            <!-- Modal content -->
            <div class="p-6">
                <div class="flex flex-col items-center">
                    <!-- Profile Circle -->
                    <div class="w-24 h-24 rounded-full bg-orange-500 text-white flex items-center justify-center text-4xl font-bold mb-4">
                        <%= user.username.charAt(0).toUpperCase() %>
                    </div>

                    <!-- User Info -->
                    <h3 class="text-2xl font-semibold text-gray-900 mb-2"><%= user.username %></h3>
                    <p class="text-sm text-gray-500 mb-4"><%= user.email %></p>

                    <!-- Account Type Badge -->
                    <div class="bg-orange-100 text-orange-800 px-4 py-2 rounded-full text-sm font-medium mb-6">
                        <%= user.role === 'vendor' ? 'Vendor Account' : 'Customer Account' %>
                    </div>

                    <!-- Action Buttons -->
                    <div class="w-full space-y-3">
                        <a href="/orders" class="block w-full text-center px-4 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200">
                            My Orders
                        </a>
                        <a href="/settings" class="block w-full text-center px-4 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200">
                            Account Settings
                        </a>
                        <a href="/logout" class="block w-full text-center px-4 py-3 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors duration-200">
                            Logout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const profileButton = document.getElementById('profileButton');
            const profileModal = document.getElementById('profileModal');
            const closeModal = document.getElementById('closeModal');
            const modalContent = document.querySelector('.modal-content');

            // Initially hide the modal
            profileModal.style.display = 'none';

            function showModal() {
                profileModal.style.display = 'flex';
                setTimeout(() => {
                    profileModal.classList.add('active');
                    modalContent.classList.add('active');
                }, 10);
            }

            function hideModal() {
                profileModal.classList.remove('active');
                modalContent.classList.remove('active');
                setTimeout(() => {
                    profileModal.style.display = 'none';
                }, 300);
            }

            // Event Listeners
            profileButton.addEventListener('click', showModal);
            
            closeModal.addEventListener('click', hideModal);

            // Close on outside click
            profileModal.addEventListener('click', function(e) {
                if (e.target === profileModal) {
                    hideModal();
                }
            });

            // Close on escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape' && profileModal.style.display === 'flex') {
                    hideModal();
                }
            });

            // Form validation
            const profileForm = document.getElementById('profileForm');
            if (profileForm) {
                profileForm.addEventListener('submit', function(e) {
                    const name = document.getElementById('name').value.trim();
                    const email = document.getElementById('email').value.trim();
                    const username = document.getElementById('username').value.trim();

                    if (!name || !email || !username) {
                        e.preventDefault();
                        alert('Please fill in all required fields (Name, Email, and Username)');
                        return false;
                    }

                    // Email validation
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    if (!emailRegex.test(email)) {
                        e.preventDefault();
                        alert('Please enter a valid email address');
                        return false;
                    }

                    // Phone validation (if provided)
                    const phone = document.getElementById('phone').value.trim();
                    if (phone && !/^[0-9]{10}$/.test(phone)) {
                        e.preventDefault();
                        alert('Please enter a valid 10-digit phone number');
                        return false;
                    }

                    // ZIP code validation
                    const zipInput = document.getElementById('zipCode');
                    if (zipInput) {
                        const zipCode = zipInput.value.trim();
                        if (zipCode && !/^[0-9]{5}$/.test(zipCode)) {
                            e.preventDefault();
                            alert('Please enter a valid 5-digit ZIP code');
                            return false;
                        }
                    }

                    // State validation
                    const stateSelect = document.getElementById('state');
                    if (stateSelect) {
                        const state = stateSelect.value.trim();
                        if (state === '') {
                            e.preventDefault();
                            alert('Please select a state');
                            return false;
                        }
                    }

                    // If any address field is filled, require city and state
                    const street = document.getElementById('street').value.trim();
                    const city = document.getElementById('city').value.trim();
                    const state = document.getElementById('state').value.trim();

                    if ((street || city || state || zipInput.value.trim()) && (!city || !state)) {
                        e.preventDefault();
                        alert('If providing an address, City and State are required');
                        return false;
                    }
                });
            }
        });
    </script>
</body>
</html> 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders - Grab 'n' Go</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/" class="flex-shrink-0 flex items-center">
                        <span class="text-2xl font-bold text-orange-500">Grab 'n' Go</span>
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Home</a>
                    <a href="/menu" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Menu</a>
                    <a href="/orders" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Orders</a>
                    <a href="/logout" class="text-gray-700 hover:text-orange-500 px-3 py-2 rounded-md text-sm font-medium">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Orders Section -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Your Orders</h2>

            <!-- Orders List -->
            <div class="space-y-4" id="ordersContainer">
                <!-- Orders will be dynamically added here -->
            </div>
        </div>
    </div>

    <script>
        // Function to format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleString();
        }

        // Function to get status color
        function getStatusColor(status) {
            switch (status) {
                case 'pending':
                    return 'bg-yellow-100 text-yellow-800';
                case 'preparing':
                    return 'bg-blue-100 text-blue-800';
                case 'ready':
                    return 'bg-green-100 text-green-800';
                case 'picked up':
                    return 'bg-purple-100 text-purple-800';
                case 'delivered':
                    return 'bg-green-100 text-green-800';
                case 'cancelled':
                    return 'bg-red-100 text-red-800';
                default:
                    return 'bg-gray-100 text-gray-800';
            }
        }

        // Function to get payment status color
        function getPaymentColor(status) {
            switch (status) {
                case 'pending':
                    return 'bg-yellow-100 text-yellow-800';
                case 'completed':
                    return 'bg-green-100 text-green-800';
                case 'failed':
                    return 'bg-red-100 text-red-800';
                default:
                    return 'bg-gray-100 text-gray-800';
            }
        }

        // Function to fetch and display orders
        async function fetchOrders() {
            try {
                const response = await fetch('/api/orders');
                const orders = await response.json();
                const container = document.getElementById('ordersContainer');
                container.innerHTML = '';

                if (orders.length === 0) {
                    container.innerHTML = '<p class="text-gray-500 text-center">No orders found.</p>';
                    return;
                }

                orders.forEach(order => {
                    const orderCard = document.createElement('div');
                    orderCard.className = 'bg-white rounded-lg shadow-md p-6';
                    orderCard.innerHTML = `
                        <div class="flex justify-between items-start">
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900">Order #${order._id.slice(-6)}</h3>
                                <p class="text-sm text-gray-500">Placed on ${formatDate(order.createdAt)}</p>
                            </div>
                            <div class="flex flex-col items-end space-y-2">
                                <span class="px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(order.status)}">
                                    ${order.status.charAt(0).toUpperCase() + order.status.slice(1)}
                                </span>
                                <span class="px-3 py-1 rounded-full text-sm font-medium ${getPaymentColor(order.paymentDetails.paymentStatus)}">
                                    Payment: ${order.paymentDetails.paymentStatus.charAt(0).toUpperCase() + order.paymentDetails.paymentStatus.slice(1)}
                                </span>
                            </div>
                        </div>
                        <div class="mt-4">
                            <h4 class="font-medium text-gray-900">Items:</h4>
                            <ul class="mt-2 space-y-2">
                                ${order.items.map(item => `
                                    <li class="flex justify-between">
                                        <span>${item.quantity}x ${item.foodItemId.name}</span>
                                        <span>$${(item.price * item.quantity).toFixed(2)}</span>
                                    </li>
                                `).join('')}
                            </ul>
                        </div>
                        <div class="mt-4 pt-4 border-t border-gray-200">
                            <div class="flex justify-between items-center">
                                <span class="font-medium text-gray-900">Total Amount:</span>
                                <span class="font-bold text-orange-500">$${order.totalAmount.toFixed(2)}</span>
                            </div>
                            <div class="mt-2">
                                <span class="text-sm text-gray-500">Pickup Time: ${formatDate(order.pickupTime)}</span>
                            </div>
                        </div>
                    `;
                    container.appendChild(orderCard);
                });
            } catch (error) {
                console.error('Error fetching orders:', error);
            }
        }

        // Fetch orders when the page loads
        fetchOrders();
    </script>
</body>
</html> 